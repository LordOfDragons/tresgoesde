/* 
 * Trespasser Goes Drag[en]gine
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace TresGoesDE

pin Dragengine.Scenery


/**
 * Groff instance.
 */
class GroffInstance
	private var GroffModel pModel
	private var GroffName pName
	private var DVector pPosition
	private var DVector pRotation
	private var float pScale
	private var GroffValue pValueTable
	
	
	public func new()
		pScale = 1
	end
	
	
	public func GroffModel getModel()
		return pModel
	end
	
	public func void setModel( GroffModel model )
		pModel = model
	end
	
	public func GroffName getName()
		return pName
	end
	
	public func void setName( GroffName name )
		pName = name
	end
	
	public func DVector getPosition()
		return pPosition
	end
	
	public func void setPosition( DVector position )
		if position == null
			throw ENullPointer.new()
		end
		pPosition = position
	end
	
	public func DVector getRotation()
		return pRotation
	end
	
	public func void setRotation( DVector rotation )
		if rotation == null
			throw ENullPointer.new()
		end
		pRotation = rotation
	end
	
	public func float getScale()
		return pScale
	end
	
	public func void setScale( float scale )
		pScale = scale
	end
	
	public func GroffValue getValueTable()
		return pValueTable
	end
	
	public func void setValueTable( GroffValue valueTable )
		pValueTable = valueTable
	end
end
