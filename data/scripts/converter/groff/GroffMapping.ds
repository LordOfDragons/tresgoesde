/* 
 * Trespasser Goes Drag[en]gine
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace TresGoesDE.Converting


pin Dragengine.Gui
pin Dragengine.Scenery


/**
 * Groff mapping.
 */
class GroffMapping
	private var int pId
	private var GroffMaterial pMaterial
	private var int pVertexCount
	private var int pFaceCount
	private var Array pTexCoords
	private var Array pFaceVertices
	private var Array pFaceMaterials
	
	
	public func new()
		pId = 0
		pVertexCount = 0
		pFaceCount = 0
		pTexCoords = Array.new()
		pFaceVertices = Array.new()
		pFaceMaterials = Array.new()
	end
	
	
	public func int getId()
		return pId
	end
	
	public func void setId( int id )
		pId = id
	end
	
	public func GroffMaterial getMaterial()
		return pMaterial
	end
	
	public func void setMaterial( GroffMaterial material )
		pMaterial = material
	end
	
	public func int getVertexCount()
		return pVertexCount
	end
	
	public func void setVertexCount( int count )
		if count < 0
			throw EInvalidParam.new()
		end
		pVertexCount = count
	end
	
	public func int getFaceCount()
		return pFaceCount
	end
	
	public func void setFaceCount( int count )
		if count < 0
			throw EInvalidParam.new()
		end
		pFaceCount = count
	end
	
	
	public func void addTexCoord( Vector2 texCoord )
		if texCoord == null
			throw ENullPointer.new()
		end
		pTexCoords.add( texCoord )
	end
	
	public func Vector2 getTexCoordAt( int index )
		return pTexCoords.getAt( index ) cast Vector2
	end
	
	
	public func void addFaceVertex( int vertex )
		pFaceVertices.add( vertex )
	end
	
	public func int getFaceVertexAt( int index )
		return pFaceVertices.getAt( index ) cast int
	end
	
	
	public func void addFaceMaterial( int material )
		pFaceMaterials.add( material )
	end
	
	public func int getFaceMaterialAt( int index )
		return pFaceMaterials.getAt( index ) cast int
	end
end
