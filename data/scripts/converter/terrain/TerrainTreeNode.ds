/* 
 * Trespasser Goes Drag[en]gine
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace TresGoesDE.Converting


pin Dragengine.Gui
pin Dragengine.Scenery


/**
 * Terrain tree node.
 */
class TerrainTreeNode
	private var TerrainTreeNode pParent
	private var Point pCoordStart
	private var Point pCoordEnd
	private var bool pFlippedDiagonal
	private var Array pVertices
	
	private var int pLevel
	private var Array pChildren
	private var int pDataBitCount
	private var int pMaxCoeff
	private var Array pCoeff
	private var RectArea pBoundary
	
	private var bool pIsBorderMinX
	private var bool pIsBorderMaxX
	private var bool pIsBorderMinY
	private var bool pIsBorderMaxY
	
	
	public func new( Terrain terrain,  Point coordStart, Point coordEnd, bool flippedDiagonal )
		pCoordStart = coordStart
		pCoordEnd = coordEnd
		pFlippedDiagonal = flippedDiagonal
		
		pCoeff = Array.newWith( 0, 0, 0 )
		pBoundary = RectArea.new( coordStart, coordEnd - coordStart )
		pVertices = Array.new()
		
		pIsBorderMinX = coordStart.getX() == terrain.getCoordStart().getX()
		pIsBorderMaxX = coordEnd.getX() == terrain.getCoordEnd().getX()
		pIsBorderMinY = coordStart.getY() == terrain.getCoordStart().getY()
		pIsBorderMaxY = coordEnd.getY() == terrain.getCoordEnd().getY()
	end
	
	public func void dispose()
		pParent = null
		pVertices = null
	end
	
	
	public func TerrainTreeNode getParent()
		return pParent
	end
	
	public func void setParent( TerrainTreeNode parent )
		pParent = parent
	end
	
	public func Point getCoordStart()
		return pCoordStart
	end
	
	public func Point getCoordEnd()
		return pCoordEnd
	end
	
	public func bool getFlippedDiagonal()
		return pFlippedDiagonal
	end
	
	public func int getDataBitCount()
		return pDataBitCount
	end
	
	public func void setDataBitCount( int bitcount )
		if bitcount < 0
			throw EInvalidParam.new( "bitcount < 0" )
		end
		if bitcount > 30
			throw EInvalidParam.new( "bitcount > 30" )
		end
		pDataBitCount = bitcount
	end
	
	public func int getMaxCoeff()
		return pMaxCoeff
	end
	
	public func void setMaxCoeff( int maxCoeff )
		pMaxCoeff = maxCoeff
	end
	
	public func int getCoeffAt( int index )
		return pCoeff.getAt( index ) cast int
	end
	
	public func void setCoeffAt( int index, int coeff )
		pCoeff.setAt( index, coeff )
	end
	
	public func RectArea getBoundary()
		return pBoundary
	end
	
	public func int getLevel()
		return pLevel
	end
	
	public func void setLevel( int level )
		pLevel = level
	end
	
	
	public func void addVertex( TerrainTreeVertex vertex )
		pVertices.add( vertex )
	end
	
	public func void forEachVertex( Block ablock )
		pVertices.forEach( ablock )
	end
	
	
	public func TerrainTreeNode getChildAt( int index )
		return pChildren.getAt( index ) cast TerrainTreeNode
	end
	
	public func void setChildAt( int index, TerrainTreeNode child )
		if pChildren == null
			pChildren = Array.new( 4, null )
		end
		pChildren.setAt( index, child )
	end
	
	public func int indexOfChild( TerrainTreeNode child )
		return pChildren.indexOf( child )
	end
end
