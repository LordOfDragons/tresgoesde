/* 
 * Trespasser Goes Drag[en]gine
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace TresGoesDE

pin Dragengine.CameraDirectors
pin Dragengine.Gui
pin Dragengine.Scenery
pin Dragengine.Preloading
pin Dragengine.Utils


/**
 * \brief Start game loader class.
 */
class StartGame extends WindowGameWorld.Loader
	public func new( WindowGameWorld window, String pathWorld ) super( window )
		setPathWorld( pathWorld )
	end
	
	public func void onLoadWorldFinished()
		var GameApp app = BaseGameApp.getApp() cast GameApp
		var GameWorld gameWorld = getStubWorld().getGameWorld()
		
		var ElementClass eclass = app.getElementClassList().getNamed( "Actor" )
		var UniqueID id = app.getIDGenerator().nextID()
		var BaseActor player = StubElement.new( eclass, id ).createElement() cast BaseActor
		player.getAIAction().setAction( BAAFirstPerson.new() )
		gameWorld.getSpawnPoints().getNamed( "player" ).spawn( gameWorld, player )
		
		player.getPlayerControllable().takeControl()
		
		getWindow().setCameraDirector( PlayerControlledActorCameraDirector.new() )
		
		super.onLoadWorldFinished()
		app.setInputProcessorBindings()
		app.finishLoadGameWorld()
	end
	
	public func void onLoadWorldFailed()
		super.onLoadWorldFailed()
		BaseGameApp.getApp().cancelLoadGameWorld()
		Engine.quit()
	end
end
